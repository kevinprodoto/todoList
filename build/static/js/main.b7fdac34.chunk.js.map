{"version":3,"sources":["components/NewTaskForm/NewTaskForm.js","components/Task/Task.js","components/TaskFilters/TaskFilters.js","components/Footer/Footer.js","components/TaskList/TaskList.js","index.js"],"names":["NewTaskForm","state","label","onLabelChange","e","setState","target","value","onSubmit","preventDefault","props","onItemAdded","className","this","onChange","placeholder","autoFocus","Component","Task","onDeleted","onToggleCompleted","onToggleEdit","edit","classNames","completed","onClick","type","formatDistanceToNow","Date","addSuffix","TaskFilters","buttons","name","filter","onFilterChange","map","clazz","Footer","todoCount","onClearAll","TaskList","todos","elements","item","id","itemProps","App","maxId","todoData","createTodoItem","search","deleteItem","idx","findIndex","el","slice","deleteAllCompleted","newArray","forEach","addItem","text","console","log","newItem","toggleProp","length","toLowerCase","indexOf","arr","propName","oldItem","completedCount","visibleItems","searchItems","filterItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7fdac34.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nexport default class NewTaskForm extends Component {\r\n    state = {\r\n        label: \"\"\r\n    }\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        })\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.label !== \"\") {\r\n            this.props.onItemAdded(this.state.label)\r\n            this.setState({\r\n                label: \"\"\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const searchText = \"What needs to be done?\";\r\n        return (\r\n            <header className=\"header\">\r\n                <h1>todos</h1>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input onChange={this.onLabelChange}\r\n                    className=\"new-todo\" \r\n                    placeholder={ searchText } \r\n                    autoFocus\r\n                    value={this.state.label}/>\r\n                </form>\r\n            </header>\r\n        ) \r\n    }\r\n};","import React, { Component } from \"react\";\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\r\n\r\nexport default class Task extends Component {\r\n    render() {\r\n        const { label, onDeleted, \r\n            onToggleCompleted, \r\n            onToggleEdit, \r\n            edit, completed} = this.props;\r\n\r\n        let classNames = \"\";\r\n        if (completed) {\r\n            classNames = \"completed\"\r\n        }\r\n        if (edit) {\r\n            classNames = \"edit\"\r\n        }\r\n        return (\r\n            <li className={classNames}>\r\n                <div className=\"view\">\r\n                    <input onClick = {onToggleCompleted} className=\"toggle\" type=\"checkbox\"/>\r\n                    <label>\r\n                        <span className=\"description\">{label}</span>\r\n                        <span className=\"created\">{formatDistanceToNow(new Date(), {addSuffix: true})}</span>\r\n                    </label>\r\n                    <button className=\"icon icon-edit\" onClick={onToggleEdit}></button>\r\n                    <button className=\"icon icon-destroy\" onClick={onDeleted}></button>\r\n                </div>\r\n            </li>\r\n        )\r\n    };\r\n};\r\n","import React, {Component} from \"react\";\r\n\r\nexport default class  TaskFilters extends Component {\r\n    buttons = [\r\n        {name: \"All\", label: \"All\"},\r\n        {name: \"Active\", label: \"Active\"},\r\n        {name: \"Completed\", label: \"Completed\"}\r\n    ]\r\n    render() {\r\n        const {filter, onFilterChange} = this.props;\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isSelected = filter === name;\r\n            const clazz = isSelected ? \"selected\" : \"\";\r\n                return (\r\n                    <li className = {clazz}><button onClick = {() => onFilterChange(name)}>{label}</button></li>\r\n                )\r\n        })\r\n        return (\r\n            <ul className=\"filters\">\r\n                {buttons}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport TaskFilters from \"../TaskFilters/TaskFilters\";\r\n\r\nconst Footer = ({todoCount, onClearAll, filter, onFilterChange}) => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <span className=\"todo-count\">{todoCount} items left</span>\r\n                <TaskFilters filter = {filter} onFilterChange = {onFilterChange}/>\r\n            <button onClick={onClearAll} className=\"clear-completed\">Clear completed</button>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport Task from \"../Task/Task\";\r\nimport Footer from \"../Footer/Footer\"\r\n\r\nconst TaskList = ({todos, onDeleted, onToggleCompleted, onToggleEdit, todoCount, onClearAll, filter, onFilterChange}) => {\r\n    const elements = todos.map((item) => {\r\n        const { id, ...itemProps} = item;\r\n\r\n        return (\r\n            <Task key ={id} {...itemProps} \r\n            onDeleted={() => onDeleted(id)}\r\n            onToggleCompleted={() => onToggleCompleted(id)}\r\n            onToggleEdit={() => onToggleEdit(id)}/>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <section className=\"main\">\r\n            <ul className=\"todo-list\">\r\n                { elements }\r\n            </ul>\r\n            <Footer todoCount={todoCount}\r\n                    onClearAll={onClearAll}\r\n                    filter = {filter}\r\n                    onFilterChange = {onFilterChange}/>\r\n        </section>\r\n    )\r\n}\r\n  export default TaskList;","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport NewTaskForm from \"./components/NewTaskForm/NewTaskForm\"\r\nimport TaskList from \"./components/TaskList/TaskList\";\r\n\r\nexport default class App extends Component  {\r\n  maxId = 100; \r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem(\"Drink Coffee\"),\r\n      this.createTodoItem(\"Make Awesome App\"),\r\n      this.createTodoItem(\"Have a lunch\")\r\n    ],\r\n    filter: \"All\",\r\n    search: \"\"\r\n  }\r\n  filterItems(todoData, filter) {\r\n    switch(filter) {\r\n      case \"All\":\r\n        return todoData;\r\n       case \"Active\": \r\n        return todoData.filter((item) => !item.completed);\r\n      case \"Completed\": \r\n        return todoData.filter((item) => item.completed);\r\n      default:\r\n        return todoData;   \r\n    }\r\n  }\r\n  searchItems(todoData, search) {\r\n    if (search.length === 0) {\r\n      return todoData;\r\n    }\r\n\r\n    return todoData.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n    });\r\n  }\r\n  createTodoItem(label) {\r\n    return {\r\n      label, \r\n      edit: false,\r\n      completed: false,\r\n      id: this.maxId++\r\n    }\r\n  }\r\n  deleteItem = (id) => {\r\n    this.setState(({todoData}) => {\r\n      const idx = todoData.findIndex((el) => el.id=== id);\r\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)]\r\n      return {\r\n        todoData: newArray\r\n      }\r\n    })\r\n  }\r\n  deleteAllCompleted = () => {\r\n    this.setState(({todoData}) => {\r\n      const newArray = [...todoData];\r\n      newArray.forEach(item => {\r\n        if (item.completed) {\r\n          this.deleteItem(item.id);\r\n        }\r\n        return {\r\n          todoData: newArray\r\n        }       \r\n      });\r\n    })\r\n  }\r\n  addItem = (text) => {\r\n    console.log(\"added\", text)\r\n    const newItem = this.createTodoItem(text);\r\n    this.setState(({todoData}) => {\r\n      const newArray = [...todoData, newItem]\r\n      return {\r\n        todoData: newArray\r\n      }\r\n    })\r\n  }\r\n  toggleProp(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n    const oldItem = arr[idx];\r\n    const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)]\r\n  }\r\n  onToggleCompleted = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProp(todoData, id, \"completed\")\r\n      }\r\n    })\r\n  }\r\n  onToggleEdit = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProp(todoData, id, \"edit\")\r\n      }\r\n    })\r\n  }\r\n  onFilterChange = (filter) => {\r\n    this.setState({filter})\r\n  }\r\n  render() {\r\n    const { todoData, filter, search } = this.state;\r\n    const completedCount = this.state.todoData.filter((el) => el.completed).length;\r\n    const todoCount = this.state.todoData.length - completedCount;\r\n    const visibleItems = this.searchItems(this.filterItems(todoData, filter), search);\r\n    return (\r\n      <section className=\"todoapp\">\r\n        <NewTaskForm onItemAdded={this.addItem}/>\r\n        <TaskList \r\n        todos = {visibleItems}\r\n        onDeleted ={this.deleteItem}\r\n        onToggleCompleted={this.onToggleCompleted}\r\n        onToggleEdit={this.onToggleEdit}\r\n        onClearAll={this.deleteAllCompleted}\r\n        todoCount={todoCount}\r\n        filter = {this.state.filter}\r\n        onFilterChange = {this.onFilterChange}/>\r\n      </section>\r\n    );\r\n  }\r\n\r\n}\r\n  \r\n  ReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}